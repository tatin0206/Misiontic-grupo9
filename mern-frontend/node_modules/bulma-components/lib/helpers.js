'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var device = /(?:(?:mobile|tablet|touch|desktop|widescreen)(?:-only)?)/.source;
var is = /(?:is-)?/.source;
var size = /([\w/]*(?:-[\w])?)/.source;
var SIZE = new RegExp('^' + is + size + '(-' + device + ')?$');
var MULTISIZE = new RegExp('^' + SIZE.source + '(?:\\s' + SIZE.source + ')+$');
var DEVICE = new RegExp('^' + is + '(' + device + ')$');

var _parseSize = function _parseSize(string, prefix) {
  var dev = string.match(SIZE);
  if (dev.length > 1) {
    var _size = dev[1] || '';
    var option = dev[2] || '';
    if (_size === 'three-quarters' || _size === '3/4') {
      return prefix + '-three-quarters' + option;
    } else if (_size === 'two-thirds' || _size === '2/3') {
      return prefix + '-two-thirds' + option;
    } else if (_size === 'half' || _size === '1/2') {
      return prefix + '-half' + option;
    } else if (_size === 'one-third' || _size === '1/3') {
      return prefix + '-one-third' + option;
    } else if (_size === 'one-quarter' || _size === '1/4') {
      return prefix + '-one-quarter' + option;
    } else if (_size === 'one' || _size === '1') {
      return prefix + '-one' + option;
    } else if (_size === 'two' || _size === '2') {
      return prefix + '-two' + option;
    } else if (_size === 'three' || _size === '3') {
      return prefix + '-three' + option;
    } else if (_size === 'four' || _size === '4') {
      return prefix + '-four' + option;
    } else if (_size === 'five' || _size === '5') {
      return prefix + '-five' + option;
    } else if (_size === 'six' || _size === '6') {
      return prefix + '-six' + option;
    } else if (_size === 'seven' || _size === '7') {
      return prefix + '-seven' + option;
    } else if (_size === 'eight' || _size === '8') {
      return prefix + '-eight' + option;
    } else if (_size === 'nine' || _size === '9') {
      return prefix + '-nine' + option;
    } else if (_size === 'ten' || _size === '10') {
      return prefix + '-ten' + option;
    } else if (_size === 'eleven' || _size === '11') {
      return prefix + '-eleven' + option;
    } else return '';
  } else return '';
};

var parseSize = function parseSize(string) {
  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'is';

  if (MULTISIZE.test(string)) {
    return string.split(' ').map(function (str) {
      return _parseSize(str, prefix);
    }).join(' ');
  } else {
    return _parseSize(string, prefix);
  }
};

exports.parseSize = parseSize;
exports.SIZE = SIZE;
exports.MULTISIZE = MULTISIZE;
exports.DEVICE = DEVICE;