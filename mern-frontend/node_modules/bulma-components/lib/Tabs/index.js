'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BulmaTabs = function (_Component) {
  _inherits(BulmaTabs, _Component);

  function BulmaTabs(p) {
    _classCallCheck(this, BulmaTabs);

    var _this = _possibleConstructorReturn(this, (BulmaTabs.__proto__ || Object.getPrototypeOf(BulmaTabs)).call(this, p));

    _this.state = {
      active: _this.props.active || _this.props.elements[0] || null
    };
    _this.parseTabs = _this.parseTabs.bind(_this);
    _this.handleChange = _this.handleChange.bind(_this);
    return _this;
  }

  _createClass(BulmaTabs, [{
    key: 'handleChange',
    value: function handleChange(index) {
      var _this2 = this;

      if (this.state.active !== this.props.elements[index]) {
        this.setState({ active: this.props.elements[index] }, function () {
          if (_this2.props.callback) {
            _this2.props.callback(_this2.state);
          }
        });
      }
    }
  }, {
    key: 'parseTabs',
    value: function parseTabs(tab, index) {
      var _this3 = this;

      if ((typeof tab === 'undefined' ? 'undefined' : _typeof(tab)) === 'object') {
        if (tab.hasOwnProperty('label') && tab.hasOwnProperty('content')) {
          return _react2.default.createElement(
            'li',
            { key: _uuid2.default.v4(), className: this.state.active === tab.label ? 'is-active' : '', onClick: function onClick() {
                return _this3.handleChange(index);
              } },
            tab.content
          );
        }
      } else {
        return _react2.default.createElement(
          'li',
          { key: _uuid2.default.v4(), className: this.state.active === tab ? 'is-active' : '', onClick: function onClick() {
              return _this3.handleChange(index);
            } },
          _react2.default.createElement(
            'a',
            null,
            tab
          )
        );
      }
    }
  }, {
    key: 'injectTabs',
    value: function injectTabs() {
      if (this.props.hasOwnProperty('container')) {
        return _react2.default.createElement(
          'div',
          { className: 'container' },
          _react2.default.createElement(
            'ul',
            { className: 'is-' + this.props.position },
            this.props.elements.map(this.parseTabs)
          )
        );
      } else {
        return _react2.default.createElement(
          'ul',
          { className: 'is-' + this.props.position },
          this.props.elements.map(this.parseTabs)
        );
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'nav',
        { className: 'tabs ' + this.props.className },
        this.injectTabs()
      );
    }
  }]);

  return BulmaTabs;
}(_react.Component);

BulmaTabs.defaultProps = {
  elements: [],
  className: '',
  position: 'left'
};

exports.default = BulmaTabs;