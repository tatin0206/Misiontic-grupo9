'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BulmaTextField = function (_Component) {
  _inherits(BulmaTextField, _Component);

  function BulmaTextField(p) {
    _classCallCheck(this, BulmaTextField);

    var _this = _possibleConstructorReturn(this, (BulmaTextField.__proto__ || Object.getPrototypeOf(BulmaTextField)).call(this, p));

    _this.state = {
      value: '',
      valid: null
    };
    _this.handleChange = _this.handleChange.bind(_this);
    _this.validate = _this.validate.bind(_this);
    return _this;
  }

  _createClass(BulmaTextField, [{
    key: 'handleChange',
    value: function handleChange(event) {
      var _this2 = this;

      var value = event.target.value;
      this.setState({ value: value, valid: this.validate(value) }, function () {
        if (_this2.props.callback) {
          _this2.props.callback(_this2.state);
        }
      });
    }
  }, {
    key: 'validate',
    value: function validate(value) {
      if (this.props.required) {
        return value !== '' && this.props.pattern.test(value);
      } else return this.props.pattern.test(value);
    }
  }, {
    key: '_useIcon',
    value: function _useIcon() {
      if (this.props.hasOwnProperty('icon')) {
        return 'has-icon';
      } else {
        return this.props.iconRight ? 'has-icon has-icon-right' : '';
      }
    }
  }, {
    key: '_classState',
    value: function _classState() {
      return this.state.valid === null ? this.props.required ? 'is-warning' : '' : this.state.valid ? 'is-success' : 'is-danger';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'p',
        { className: 'control ' + this._useIcon() + ' ' + this.props.control },
        this.props.area ? _react2.default.createElement('textarea', {
          className: 'textarea ' + this._classState(),
          type: this.props.type,
          placeholder: this.props.placeholder,
          onChange: this.handleChange,
          value: this.state.value
        }) : _react2.default.createElement('input', {
          className: 'input ' + this._classState(),
          type: this.props.type,
          placeholder: this.props.placeholder,
          onChange: this.handleChange,
          value: this.state.value
        }),
        function () {
          if (_this3.props.iconRight && typeof _this3.state.valid === 'boolean') {
            if (_this3.state.valid) {
              return _react2.default.createElement(
                _Icon2.default,
                null,
                'check'
              );
            } else {
              return _react2.default.createElement(
                _Icon2.default,
                null,
                'warning'
              );
            }
          } else if (_this3.props.hasOwnProperty('icon')) {
            return _react2.default.createElement(
              _Icon2.default,
              null,
              _this3.props.icon
            );
          }
        }(),
        function () {
          switch (_this3._classState()) {
            case 'is-warning':
              return _react2.default.createElement(
                'span',
                { className: 'help is-warning' },
                _this3.props.warning
              );
            case 'is-danger':
              return _react2.default.createElement(
                'span',
                { className: 'help is-danger' },
                _this3.props.error
              );
            case 'is-success':
              return _react2.default.createElement(
                'span',
                { className: 'help is-success' },
                _this3.props.success
              );
            default:
              return _react2.default.createElement(
                'span',
                { className: 'help' },
                '.'
              );
          }
        }()
      );
    }
  }]);

  return BulmaTextField;
}(_react.Component);

exports.default = BulmaTextField;


BulmaTextField.defaultProps = {
  type: 'text',
  placeholder: '',
  iconRight: false,
  required: false,
  success: 'OK',
  error: 'Error!',
  warning: 'Warning!',
  pattern: new RegExp(),
  area: false,
  control: ''
};