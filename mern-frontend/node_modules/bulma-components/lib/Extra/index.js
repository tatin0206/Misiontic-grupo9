'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Control = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BulmaControl = function (_Component) {
  _inherits(BulmaControl, _Component);

  function BulmaControl() {
    _classCallCheck(this, BulmaControl);

    return _possibleConstructorReturn(this, (BulmaControl.__proto__ || Object.getPrototypeOf(BulmaControl)).apply(this, arguments));
  }

  _createClass(BulmaControl, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'p',
        { className: 'control ' + this.props.className },
        this.props.children
      );
    }
  }]);

  return BulmaControl;
}(_react.Component);

BulmaControl.defaultProps = {
  className: ''
};

var BulmaAddon = function (_Component2) {
  _inherits(BulmaAddon, _Component2);

  function BulmaAddon() {
    _classCallCheck(this, BulmaAddon);

    return _possibleConstructorReturn(this, (BulmaAddon.__proto__ || Object.getPrototypeOf(BulmaAddon)).apply(this, arguments));
  }

  _createClass(BulmaAddon, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'p',
        { className: 'control has-addons ' + this.props.className + ' ' + (this.props.align ? 'has-addons-' + this.props.align : '') },
        this.props.children
      );
    }
  }]);

  return BulmaAddon;
}(_react.Component);

BulmaAddon.defaultProps = {
  align: undefined,
  className: ''
};

var Control = BulmaControl;
var Addon = BulmaAddon;

exports.default = Addon;
exports.Control = Control;