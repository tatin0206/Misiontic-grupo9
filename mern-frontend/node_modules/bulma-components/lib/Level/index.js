'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LevelResume = exports.LevelItem = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BulmaLevel = function (_Component) {
  _inherits(BulmaLevel, _Component);

  function BulmaLevel() {
    _classCallCheck(this, BulmaLevel);

    return _possibleConstructorReturn(this, (BulmaLevel.__proto__ || Object.getPrototypeOf(BulmaLevel)).apply(this, arguments));
  }

  _createClass(BulmaLevel, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'nav',
        { className: 'level ' + this.props.className },
        this.props.children
      );
    }
  }]);

  return BulmaLevel;
}(_react.Component);

BulmaLevel.defaultProps = {
  className: ''
};

var BulmaLevelItem = function (_Component2) {
  _inherits(BulmaLevelItem, _Component2);

  function BulmaLevelItem() {
    _classCallCheck(this, BulmaLevelItem);

    return _possibleConstructorReturn(this, (BulmaLevelItem.__proto__ || Object.getPrototypeOf(BulmaLevelItem)).apply(this, arguments));
  }

  _createClass(BulmaLevelItem, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'level-' + this.props.type + ' ' + this.props.className },
        this.props.children
      );
    }
  }]);

  return BulmaLevelItem;
}(_react.Component);

BulmaLevelItem.defaultProps = {
  type: 'item',
  className: ''
};

var BulmaLevelResume = function (_Component3) {
  _inherits(BulmaLevelResume, _Component3);

  function BulmaLevelResume() {
    _classCallCheck(this, BulmaLevelResume);

    return _possibleConstructorReturn(this, (BulmaLevelResume.__proto__ || Object.getPrototypeOf(BulmaLevelResume)).apply(this, arguments));
  }

  _createClass(BulmaLevelResume, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'level-item has-text-centered ' + this.props.className },
        _react2.default.createElement(
          'p',
          { className: 'heading' },
          this.props.heading
        ),
        _react2.default.createElement(
          'p',
          { className: 'title' },
          this.props.title
        )
      );
    }
  }]);

  return BulmaLevelResume;
}(_react.Component);

BulmaLevelResume.defaultProps = {
  className: ''
};

var LevelItem = BulmaLevelItem;
var LevelResume = BulmaLevelResume;

exports.default = BulmaLevel;
exports.LevelItem = LevelItem;
exports.LevelResume = LevelResume;