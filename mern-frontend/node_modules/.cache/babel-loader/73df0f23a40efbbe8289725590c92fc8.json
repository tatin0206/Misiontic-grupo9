{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\infometrika\\\\Desktop\\\\WEB\\\\mern-frontend\\\\src\\\\Products\\\\components\\\\ProductLayout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AddButton from './AddButton';\nimport Header from './Headers';\nimport ListProducts from './ListProducts';\nimport { Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from './Form';\nimport { saveProducts, getProducts } from '../services';\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductLayout = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  /* Eliminar si no funciona*/\n\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n\n  async function loadProducts() {\n    const response = await getProducts();\n\n    if (response.status === 200) {\n      setProducts(response.data.products);\n    }\n\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  const handleSubmit = async data => {\n    await saveProducts(data);\n    loadProducts();\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Products App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n      onClick: () => setShow(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }, this), !isLoading && !products.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title has-text-centered\",\n      children: \"You don't have products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            handleSubmit: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), !isLoading && products.length && /*#__PURE__*/_jsxDEV(ListProducts, {\n            products: products\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductLayout, \"eKsB4dmsW+cUsgz5BZwcUM8GGkM=\");\n\n_c = ProductLayout;\nexport default ProductLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductLayout\");","map":{"version":3,"sources":["C:/Users/infometrika/Desktop/WEB/mern-frontend/src/Products/components/ProductLayout.js"],"names":["React","useState","useEffect","AddButton","Header","ListProducts","Modal","Form","saveProducts","getProducts","Loading","ProductLayout","show","setShow","handleClose","isLoading","setIsLoading","products","setProducts","loadProducts","response","status","data","handleSubmit","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMa,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;AAEA;;;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,iBAAekB,YAAf,GAA8B;AAC5B,UAAMC,QAAQ,GAAG,MAAMX,WAAW,EAAlC;;AAEA,QAAIW,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BH,MAAAA,WAAW,CAACE,QAAQ,CAACE,IAAT,CAAcL,QAAf,CAAX;AACD;;AAEDD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AAEdiB,IAAAA,YAAY;AACb,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,YAAY,GAAG,MAAOD,IAAP,IAAgB;AACnC,UAAMd,YAAY,CAACc,IAAD,CAAlB;AACAH,IAAAA,YAAY;AACZN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,IAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,EAKIE,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALjB,EAQI,CAACA,SAAD,IAAc,CAACE,QAAQ,CAACO,MAAxB,iBACE;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATN,eAgBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEZ,IAAb;AAAmB,QAAA,MAAM,EAAEE,WAA3B;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,YAAY,EAAES;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF,EAGI,CAACR,SAAD,IAAcE,QAAQ,CAACO,MAAvB,iBAAiC,QAAC,YAAD;AAAc,YAAA,QAAQ,EAAEP;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAHrC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAqCD,CAlED;;GAAMN,a;;KAAAA,a;AAoEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport AddButton from './AddButton'\r\nimport Header from './Headers'\r\nimport ListProducts from './ListProducts'\r\nimport { Modal } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Form from './Form'\r\nimport { saveProducts, getProducts } from '../services'\r\nimport Loading from \"./Loading\";\r\n\r\nconst ProductLayout = () => {\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false);\r\n\r\n  /* Eliminar si no funciona*/\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [products, setProducts] = useState([])\r\n\r\n  async function loadProducts() {\r\n    const response = await getProducts()\r\n\r\n    if (response.status === 200) {\r\n      setProducts(response.data.products)\r\n    }\r\n\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    loadProducts()\r\n  }, [])\r\n\r\n  const handleSubmit = async (data) => {\r\n    await saveProducts(data)\r\n    loadProducts()\r\n    setShow(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Products App\" />\r\n      <AddButton onClick={() => setShow(true)} />\r\n\r\n      {\r\n        isLoading && <Loading />\r\n      }\r\n      {\r\n        !isLoading && !products.length && (\r\n          <h2 className=\"title has-text-centered\">\r\n            You don't have products\r\n          </h2>)\r\n      }\r\n\r\n\r\n\r\n      <div className=\"container mt-5\">\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Product</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form handleSubmit={handleSubmit} />\r\n            {\r\n              !isLoading && products.length && <ListProducts products={products} />\r\n            }\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductLayout"]},"metadata":{},"sourceType":"module"}