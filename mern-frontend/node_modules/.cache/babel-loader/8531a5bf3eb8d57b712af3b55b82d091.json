{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\infometrika\\\\Desktop\\\\WEB\\\\mern-frontend\\\\src\\\\Products\\\\components\\\\ListProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getProducts } from \"../services\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListProducts = () => {\n  _s();\n\n  //funcion hoock\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await getProducts();\n\n      if (response.status === 200) {\n        setProducts(response.data.products);\n      }\n    }\n\n    loadProducts();\n  }, []);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 15\n  }, this) : 'mostrar resultado fetch';\n};\n\n_s(ListProducts, \"jpFfQsrFuW9J8FEfL1ODyw7O/bk=\");\n\n_c = ListProducts;\nexport default ListProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProducts\");","map":{"version":3,"sources":["C:/Users/infometrika/Desktop/WEB/mern-frontend/src/Products/components/ListProducts.js"],"names":["React","useState","useEffect","getProducts","Loading","ListProducts","isLoading","setIsLoading","products","setProducts","loadProducts","response","status","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA2BN,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeQ,YAAf,GAA+B;AAC3B,YAAMC,QAAQ,GAAG,MAAMR,WAAW,EAAlC;;AAEA,UAAIQ,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA4B;AACxBH,QAAAA,WAAW,CAACE,QAAQ,CAACE,IAAT,CAAcL,QAAf,CAAX;AACH;AACJ;;AAEDE,IAAAA,YAAY;AACf,GAVQ,EAUP,EAVO,CAAT;AAYA,SAEQJ,SAAS,gBACP,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADO,GAEP,yBAJV;AAMH,CAvBD;;GAAMD,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { getProducts } from \"../services\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst ListProducts = () => {\r\n    //funcion hoock\r\n    const [isLoading, setIsLoading]= useState(true)\r\n    const [products, setProducts] = useState([])\r\n\r\n    useEffect( () => {\r\n        async function loadProducts () {\r\n            const response = await getProducts()\r\n\r\n            if (response.status === 200){\r\n                setProducts(response.data.products)\r\n            } \r\n        }\r\n\r\n        loadProducts()\r\n    },[])\r\n    \r\n    return (\r\n        \r\n            isLoading\r\n            ? <Loading/>\r\n            : 'mostrar resultado fetch'\r\n    )\r\n}\r\n\r\nexport default ListProducts"]},"metadata":{},"sourceType":"module"}