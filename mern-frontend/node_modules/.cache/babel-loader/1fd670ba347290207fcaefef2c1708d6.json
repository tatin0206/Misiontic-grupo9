{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\infometrika\\\\Desktop\\\\WEB\\\\mern-frontend\\\\src\\\\Products\\\\components\\\\ListProducts.js\";\n\n/* import React , { useState, useEffect} from \"react\";\r\nimport { getProducts } from \"../services\";\r\nimport Loading from \"./Loading\"; */\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Columns } from 'react-bulma-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListProducts = _ref => {\n  let {\n    products\n  } = _ref;\n\n  /* return (\r\n      <Columns>\r\n          {\r\n              products.map(({ description, name, size, _id, UnitaryPrice,imgUrl }) => (\r\n                  <Columns.Column size={4} key={_id}>\r\n                      <Card>\r\n                          <Card.Img  variant=\"top\" src={imgUrl}/>\r\n                      </Card>\r\n                  </Columns.Column>\r\n              ))\r\n          }\r\n      </Columns>\r\n  ) */\n  //funcion hoock\n\n  /* const [isLoading, setIsLoading]= useState(true)\r\n  const [products, setProducts] = useState([])\r\n   useEffect( () => {\r\n     async function loadProducts () {\r\n         const response = await getProducts()\r\n           if (response.status === 200){\r\n             setProducts(response.data.products)\r\n         } \r\n           setIsLoading(false)\r\n     }\r\n       loadProducts()\r\n  },[]) \r\n   if (isLoading){\r\n     return <Loading/>\r\n  }\r\n   if (!products.length){\r\n     return <h2 className=\"title has-text-centered\">You don't have products</h2> \r\n  }\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: products.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          width: \"18rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.imgUrl,\n          className: \"card\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"car-body p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-text\",\n            style: {\n              textAlign: 'center'\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [\"Descripci\\xF3n: \", item.description, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListProducts;\nexport default ListProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListProducts\");","map":{"version":3,"sources":["C:/Users/infometrika/Desktop/WEB/mern-frontend/src/Products/components/ListProducts.js"],"names":["React","Card","Columns","ListProducts","products","map","item","index","width","imgUrl","textAlign","name","description"],"mappings":";;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOI,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIA,QAAQ,CAACC,GAAT,CAAa,CAACC,IAAD,EAAMC,KAAN,kBAEb;AAAiB,MAAA,SAAS,EAAC,UAA3B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA7B;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEF,IAAI,CAACG,MAAf;AAAuB,UAAA,SAAS,EAAC,MAAjC;AAAwC,UAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,WAAd;AAA0B,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAjC;AAAA,sBAA2DJ,IAAI,CAACK;AAAhE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,KAAK,EAAE;AAAED,cAAAA,SAAS,EAAE;AAAb,aAAV;AAAA,2CAAiDJ,IAAI,CAACM,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,YAFA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA9DD;;KAAMJ,Y;AAgEN,eAAeA,YAAf","sourcesContent":["/* import React , { useState, useEffect} from \"react\";\r\nimport { getProducts } from \"../services\";\r\nimport Loading from \"./Loading\"; */\r\n\r\nimport React from 'react'\r\nimport { Card, } from 'react-bootstrap';\r\nimport { Columns } from 'react-bulma-components';\r\n\r\nconst ListProducts = ({ products }) => {\r\n    /* return (\r\n        <Columns>\r\n            {\r\n                products.map(({ description, name, size, _id, UnitaryPrice,imgUrl }) => (\r\n                    <Columns.Column size={4} key={_id}>\r\n                        <Card>\r\n                            <Card.Img  variant=\"top\" src={imgUrl}/>\r\n                        </Card>\r\n                    </Columns.Column>\r\n                ))\r\n            }\r\n        </Columns>\r\n    ) */\r\n    //funcion hoock\r\n    /* const [isLoading, setIsLoading]= useState(true)\r\n   const [products, setProducts] = useState([])\r\n\r\n   useEffect( () => {\r\n       async function loadProducts () {\r\n           const response = await getProducts()\r\n\r\n           if (response.status === 200){\r\n               setProducts(response.data.products)\r\n           } \r\n\r\n           setIsLoading(false)\r\n       }\r\n\r\n       loadProducts()\r\n   },[]) \r\n\r\n   if (isLoading){\r\n       return <Loading/>\r\n   }\r\n\r\n   if (!products.length){\r\n       return <h2 className=\"title has-text-centered\">You don't have products</h2> \r\n   }\r\n   */\r\n    return(\r\n        <div className=\"row\">\r\n            {\r\n            products.map((item,index)=>(\r\n\r\n            <div key={index} className=\"col mb-4\">\r\n                <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                    <img src={item.imgUrl} className=\"card\" alt=\"\" />\r\n                    <div className=\"car-body p-2\">\r\n                        <h5 className=\"card-text\" style={{ textAlign: 'center' }}>{item.name}</h5>\r\n                        <hr />\r\n                        <p style={{ textAlign: 'center' }}>Descripci√≥n: {item.description} </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ListProducts"]},"metadata":{},"sourceType":"module"}